[susannakim@csil pa04_susannakim]$ /usr/bin/valgrind --leak-check=full ./poly2 1
==27667== Memcheck, a memory error detector
==27667== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==27667== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==27667== Command: ./poly2 1
==27667==

START OF TEST 1:
Testing basic1: constructor, coefficient, degree (15 points).
I will now test the default constructor. After initializing
with the default constructor, a the coefficient member
function should always return zero.
Test passed.

I will now test the constructor with arguments.
Test passed.

I will now test constructor like this: polynomial p(0.0, 3).
After initializing this way, a polynomial
should have all zero coefficients.
Incorrect degree.
Test 1 failed.
END OF TEST 1.

Completed test 1; result: 0
==27667==
==27667== HEAP SUMMARY:
==27667==     in use at exit: 72,896 bytes in 7 blocks
==27667==   total heap usage: 7 allocs, 0 frees, 72,896 bytes allocated
==27667==
==27667== 32 bytes in 1 blocks are definitely lost in loss record 3 of 7
==27667==    at 0x4C29216: operator new(unsigned long) (vg_replace_malloc.c:334)
==27667==    by 0x400CD4: main_savitch_5::polynomial::polynomial(double, unsigned int) (poly2.cxx:16)
==27667==    by 0x40162D: test1() (polyexam2.cxx:118)
==27667==    by 0x403A0A: run_a_test(int, char const*, double (*)(), int) (polyexam2.cxx:509)
==27667==    by 0x403C19: main (polyexam2.cxx:541)
==27667==
==27667== 32 bytes in 1 blocks are definitely lost in loss record 4 of 7
==27667==    at 0x4C29216: operator new(unsigned long) (vg_replace_malloc.c:334)
==27667==    by 0x400CD4: main_savitch_5::polynomial::polynomial(double, unsigned int) (poly2.cxx:16)
==27667==    by 0x40165B: test1() (polyexam2.cxx:118)
==27667==    by 0x403A0A: run_a_test(int, char const*, double (*)(), int) (polyexam2.cxx:509)
==27667==    by 0x403C19: main (polyexam2.cxx:541)
==27667==
==27667== 64 (32 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 7
==27667==    at 0x4C29216: operator new(unsigned long) (vg_replace_malloc.c:334)
==27667==    by 0x400CD4: main_savitch_5::polynomial::polynomial(double, unsigned int) (poly2.cxx:16)
==27667==    by 0x401646: test1() (polyexam2.cxx:118)
==27667==    by 0x403A0A: run_a_test(int, char const*, double (*)(), int) (polyexam2.cxx:509)
==27667==    by 0x403C19: main (polyexam2.cxx:541)
==27667==
==27667== 64 (32 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 7
==27667==    at 0x4C29216: operator new(unsigned long) (vg_replace_malloc.c:334)
==27667==    by 0x400CD4: main_savitch_5::polynomial::polynomial(double, unsigned int) (poly2.cxx:16)
==27667==    by 0x401673: test1() (polyexam2.cxx:118)
==27667==    by 0x403A0A: run_a_test(int, char const*, double (*)(), int) (polyexam2.cxx:509)
==27667==    by 0x403C19: main (polyexam2.cxx:541)
==27667==
==27667== LEAK SUMMARY:
==27667==    definitely lost: 128 bytes in 4 blocks
==27667==    indirectly lost: 64 bytes in 2 blocks
==27667==      possibly lost: 0 bytes in 0 blocks
==27667==    still reachable: 0 bytes in 0 blocks
==27667==         suppressed: 72,704 bytes in 1 blocks
==27667==
==27667== For counts of detected and suppressed errors, rerun with: -v
==27667== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
